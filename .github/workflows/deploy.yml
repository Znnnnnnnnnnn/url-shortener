name: test deploy to docker hub

on:
  push:
    branches:
      - main

env:
  DOCKERHUB_USERNAME: leonardlzn
  DOCKERHUB_REPONAME: url-shortener
  DOCKERHUB_IMAGE_TAG: latest

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: install dependencies
        run: yarn

      - name: install playwright dependencies
        run: yarn run playwright install

      - name: run unit test
        run: yarn run test:unit

      - name: run unit e2e test
        run: yarn run test:e2e

  upload-image:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: login docker hub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and tag Docker image
        run: |
          docker build -t $DOCKERHUB_USERNAME/$DOCKERHUB_REPONAME:$DOCKERHUB_IMAGE_TAG .

      - name: Push Docker image to Docker Hub
        run: |
          docker push $DOCKERHUB_USERNAME/$DOCKERHUB_REPONAME:$DOCKERHUB_IMAGE_TAG

  deploy:
    needs: upload-image
    runs-on: ubuntu-latest
    steps:
      - name: ssh into ec2 and rerun container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_PUBLIC_ADDRESS }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PEM_FILE }}
          script: |
            docker rm -f web_app
            docker pull ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPONAME }}:${{ env.DOCKERHUB_IMAGE_TAG }}
            docker run -d -p 80:3000 --restart=on-failure:10 -v ~/db:/app/db --name web_app ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPONAME }}:${{ env.DOCKERHUB_IMAGE_TAG }}
